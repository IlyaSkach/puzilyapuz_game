let tg = window.Telegram.WebApp;
tg.expand();

let coins = 0;
const target = document.getElementById("target");
const coinsDisplay = document.getElementById("coins");
const intro = document.getElementById("intro");
const gameContainer = document.querySelector(".game-container");
const startButton = document.getElementById("startGame");
const stopStoryButton = document.getElementById("stopStory");

// –°–æ–∑–¥–∞–µ–º –∞—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç—ã
const storyAudio = new Audio("sounds/story.mp3");
const popSound = new Audio("sounds/pop.mp3");
const pop2Sound = new Audio("sounds/pop2.mp3");

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–≤—É–∫–æ–≤
storyAudio.volume = 0.5;
popSound.volume = 0.7;
pop2Sound.volume = 0.7;

// –°–∫—Ä—ã–≤–∞–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ –¥–æ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
gameContainer.style.display = "none";

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–∞–π–º–µ—Ä–∞ –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
let targetTimer;
let targetVisible = false;
let gameStartTime;
let difficultyLevel = 1;
let lastHitTime = 0;
const DIFFICULTY_INCREASE_INTERVAL = 10000; // —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
const MAX_DIFFICULTY = 5; // –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
const MISS_TIME_THRESHOLD = 15000; // 15 —Å–µ–∫—É–Ω–¥ –±–µ–∑ –ø–æ–ø–∞–¥–∞–Ω–∏–π –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
const DIFFICULTY_DECREASE_INTERVAL = 5000; // –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥

// –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ä–µ–º–µ–Ω–∏
const BASE_MIN_DISPLAY_TIME = 500;
const BASE_MAX_DISPLAY_TIME = 2000;
const BASE_MIN_HIDE_TIME = 1000;
const BASE_MAX_HIDE_TIME = 3000;

let isBomb = false;
const BOMB_CHANCE = 0.2; // 20% —à–∞–Ω—Å –ø–æ—è–≤–ª–µ–Ω–∏—è –±–æ–º–±—ã
const MIN_COIN_LOSS = 1; // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ—Ç–µ—Ä–∏ –º–æ–Ω–µ—Ç
const MAX_COIN_LOSS = 2; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ—Ç–µ—Ä–∏ –º–æ–Ω–µ—Ç

let gameStarted = false;

// –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è API
const API_URL = window.location.origin;

let isSoundOn = true;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
function initTelegramWebApp() {
  // –†–∞—Å—à–∏—Ä—è–µ–º –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
  tg.expand();

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –∏ —Ç–µ–∫—Å—Ç–∞
  tg.setHeaderColor("#1a1a2e");
  tg.setBackgroundColor("#1a1a2e");

  // –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
  tg.enableClosingConfirmation();

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const user = tg.initDataUnsafe?.user;
  if (user) {
    console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:", user.username);
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    localStorage.setItem(
      "telegram_user",
      JSON.stringify({
        id: user.id,
        username: user.username,
        first_name: user.first_name,
        last_name: user.last_name,
      })
    );
  } else {
    console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω");
  }

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –æ—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  loadUserScore();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function loadUserScore() {
  const user = tg.initDataUnsafe?.user;
  if (user) {
    try {
      const response = await fetch(
        `${API_URL}/api/leaderboard?username=${user.username}`
      );
      const data = await response.json();
      if (data.userRank) {
        coins = data.userRank.score;
        updateScore();
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—á–µ—Ç–∞:", error);
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function saveUserScore() {
  const user = tg.initDataUnsafe?.user;
  if (user) {
    try {
      const response = await fetch(`${API_URL}/api/scores`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          username: user.username || "–ê–Ω–æ–Ω–∏–º",
          score: coins,
        }),
      });
      const data = await response.json();
      if (data.success) {
        console.log("–°—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω");
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å—á–µ—Ç–∞:", error);
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è
function getCurrentTimes() {
  const displayTimeReduction = (difficultyLevel - 1) * 0.2; // 20% —É–º–µ–Ω—å—à–µ–Ω–∏–µ –Ω–∞ –∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å
  const hideTimeReduction = (difficultyLevel - 1) * 0.15; // 15% —É–º–µ–Ω—å—à–µ–Ω–∏–µ –Ω–∞ –∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å

  return {
    minDisplay: BASE_MIN_DISPLAY_TIME * (1 - displayTimeReduction),
    maxDisplay: BASE_MAX_DISPLAY_TIME * (1 - displayTimeReduction),
    minHide: BASE_MIN_HIDE_TIME * (1 - hideTimeReduction),
    maxHide: BASE_MAX_HIDE_TIME * (1 - hideTimeReduction),
  };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
function increaseDifficulty() {
  if (difficultyLevel < MAX_DIFFICULTY) {
    difficultyLevel++;
    console.log(`–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —É–≤–µ–ª–∏—á–µ–Ω –¥–æ ${difficultyLevel}`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
function decreaseDifficulty() {
  if (difficultyLevel > 1) {
    difficultyLevel--;
    console.log(`–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —É–º–µ–Ω—å—à–µ–Ω –¥–æ ${difficultyLevel}`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É–º–µ–Ω—å—à–µ–Ω–∏—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
function checkDifficultyDecrease() {
  const currentTime = Date.now();
  const timeSinceLastHit = currentTime - lastHitTime;

  if (timeSinceLastHit > MISS_TIME_THRESHOLD && difficultyLevel > 1) {
    decreaseDifficulty();
    lastHitTime = currentTime; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –ø–æ—Å–ª–µ —É–º–µ–Ω—å—à–µ–Ω–∏—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ü–µ–ª–∏
function showTarget() {
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –±—É–¥–µ—Ç –ª–∏ —ç—Ç–æ –±–æ–º–±–∞
  isBomb = Math.random() < BOMB_CHANCE;

  // –°–ª—É—á–∞–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ü–µ–ª–∏
  const position = randomPosition();
  target.style.left = position.x + "px";
  target.style.top = position.y + "px";

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ü–µ–ª–∏
  if (isBomb) {
    target.style.backgroundImage = "url('images/bomb.png')";
  } else {
    target.style.backgroundImage = "url('images/target.png')";
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ü–µ–ª—å
  target.style.display = "block";

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ–∫–∞–∑–∞ —Ü–µ–ª–∏
  const times = getCurrentTimes();
  let displayTime;

  if (isBomb) {
    // –î–ª—è –±–æ–º–±—ã —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ 2 —Ä–∞–∑–∞
    displayTime =
      Math.random() * (times.maxDisplay - times.minDisplay) + times.minDisplay;
    displayTime *= 2; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–æ–º–±—ã
  } else {
    displayTime =
      Math.random() * (times.maxDisplay - times.minDisplay) + times.minDisplay;
  }

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è —Ü–µ–ª–∏
  targetTimer = setTimeout(hideTarget, displayTime);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è —Ü–µ–ª–∏
function hideTarget() {
  // –°–∫—Ä—ã–≤–∞–µ–º —Ü–µ–ª—å
  target.style.display = "none";

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Ä–µ–º—è —Å–∫—Ä—ã—Ç–∏—è —Ü–µ–ª–∏
  const times = getCurrentTimes();
  const hideTime =
    Math.random() * (times.maxHide - times.minHide) + times.minHide;

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –ø–æ–∫–∞–∑–∞ –Ω–æ–≤–æ–π —Ü–µ–ª–∏
  targetTimer = setTimeout(showTarget, hideTime);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏—è –∑–≤—É–∫–∞
stopStoryButton.addEventListener("click", () => {
  isSoundOn = !isSoundOn;
  if (!isSoundOn) {
    storyAudio.pause();
    storyAudio.currentTime = 0;
    popSound.volume = 0;
    pop2Sound.volume = 0;
    stopStoryButton.textContent = "üîà";
  } else {
    storyAudio
      .play()
      .catch((e) => console.log("–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞:", e));
    popSound.volume = 0.7;
    pop2Sound.volume = 0.7;
    stopStoryButton.textContent = "üîä";
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ä—Ç–∞
startButton.addEventListener("click", () => {
  startGame();
});

// –°–ª—É—á–∞–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ü–µ–ª–∏
function randomPosition() {
  const maxX = window.innerWidth - 100;
  const maxY = window.innerHeight - 100;
  return {
    x: Math.random() * maxX,
    y: Math.random() * maxY,
  };
}

// –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–Ω–µ—Ç–∫–∏
function createCoin(x, y) {
  const coin = document.createElement("div");
  coin.className = "coin";
  coin.style.left = x + "px";
  coin.style.top = y + "px";
  document.querySelector(".game-container").appendChild(coin);

  // –£–¥–∞–ª—è–µ–º –º–æ–Ω–µ—Ç–∫—É –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
  setTimeout(() => {
    coin.remove();
  }, 1000);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —Ü–µ–ª–∏
target.addEventListener("click", () => {
  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç–∞–π–º–µ—Ä
  clearTimeout(targetTimer);

  // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–ø–∞–¥–∞–Ω–∏—è
  lastHitTime = Date.now();

  if (isBomb) {
    // –ï—Å–ª–∏ —ç—Ç–æ –±–æ–º–±–∞
    playSound("pop2");
    const coinLoss =
      Math.floor(Math.random() * (MAX_COIN_LOSS - MIN_COIN_LOSS + 1)) +
      MIN_COIN_LOSS;
    const lossAmount = Math.max(1, Math.floor(coins * (coinLoss / 100))); // –ú–∏–Ω–∏–º—É–º 1 –º–æ–Ω–µ—Ç–∞
    coins = Math.max(0, coins - lossAmount);
    updateScore();
    showCoinLoss(lossAmount);
  } else {
    // –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω–∞—è —Ü–µ–ª—å
    playSound("pop");
    const coinsCount = Math.floor(Math.random() * 5) + 1;
    coins += coinsCount;
    updateScore();

    // –°–æ–∑–¥–∞–µ–º –º–æ–Ω–µ—Ç–∫–∏ –≤ —Ç–µ–∫—É—â–µ–π –ø–æ–∑–∏—Ü–∏–∏
    const rect = target.getBoundingClientRect();
    for (let i = 0; i < coinsCount; i++) {
      setTimeout(() => {
        createCoin(rect.left + 50, rect.top + 50);
      }, i * 100);
    }
  }

  // –°–∫—Ä—ã–≤–∞–µ–º —Ü–µ–ª—å –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π —Ü–∏–∫–ª
  hideTarget();
});

function showCoinLoss(amount) {
  const lossElement = document.createElement("div");
  lossElement.className = "coin-loss";
  lossElement.textContent = `-${amount}`;

  // –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é —Ü–µ–ª–∏
  const targetRect = target.getBoundingClientRect();

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ—Ç–µ—Ä–∏ –º–æ–Ω–µ—Ç
  lossElement.style.position = "absolute";
  lossElement.style.left = `${targetRect.left + targetRect.width / 2}px`;
  lossElement.style.top = `${targetRect.top + targetRect.height / 2}px`;

  // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤ –∏–≥—Ä–æ–≤–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
  gameContainer.appendChild(lossElement);

  // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
  setTimeout(() => {
    lossElement.remove();
  }, 1500);
}

function playSound(soundName) {
  const sound = soundName === "pop2" ? pop2Sound : popSound;
  sound.currentTime = 0;
  sound.play().catch((e) => console.log("–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞:", e));
}

function updateScore() {
  coinsDisplay.textContent = coins;
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—á–∫–∏ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
  saveUserScore();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤
async function showLeaderboard(top10, userRank) {
  const leaderboardContainer = document.createElement("div");
  leaderboardContainer.className = "leaderboard-container";

  const leaderboardContent = document.createElement("div");
  leaderboardContent.className = "leaderboard-content";

  const title = document.createElement("h2");
  title.textContent = "–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤";
  leaderboardContent.appendChild(title);

  const table = document.createElement("table");
  table.innerHTML = `
    <tr>
      <th>–ú–µ—Å—Ç–æ</th>
      <th>–ò–≥—Ä–æ–∫</th>
      <th>–°—á–µ—Ç</th>
    </tr>
  `;

  // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ø-10
  top10.forEach((player, index) => {
    const row = document.createElement("tr");
    row.innerHTML = `
      <td>${index + 1}</td>
      <td>${player.username}</td>
      <td>${player.score}</td>
    `;
    table.appendChild(row);
  });

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ —Ç–æ–ø-10, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –º–µ—Å—Ç–æ
  if (userRank && userRank.rank > 10) {
    const separator = document.createElement("tr");
    separator.innerHTML = "<td colspan='3'>...</td>";
    table.appendChild(separator);

    const userRow = document.createElement("tr");
    userRow.className = "user-rank";
    userRow.innerHTML = `
      <td>${userRank.rank}</td>
      <td>${userRank.username}</td>
      <td>${userRank.score}</td>
    `;
    table.appendChild(userRow);
  }

  leaderboardContent.appendChild(table);

  const closeButton = document.createElement("button");
  closeButton.textContent = "–ó–∞–∫—Ä—ã—Ç—å";
  closeButton.onclick = hideLeaderboard;
  leaderboardContent.appendChild(closeButton);

  leaderboardContainer.appendChild(leaderboardContent);
  document.body.appendChild(leaderboardContainer);
}

function hideLeaderboard() {
  const leaderboardContainer = document.querySelector(".leaderboard-container");
  if (leaderboardContainer) {
    leaderboardContainer.remove();
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤
document.addEventListener("DOMContentLoaded", () => {
  // –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤
  const showLeaderboardBtns = document.querySelectorAll(".leaderboard-button");
  showLeaderboardBtns.forEach((btn) => {
    btn.addEventListener("click", async () => {
      try {
        const user = tg.initDataUnsafe?.user;
        const response = await fetch(
          `${API_URL}/api/leaderboard?username=${user?.username || ""}`
        );
        const data = await response.json();
        showLeaderboard(data.top10, data.userRank);
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤:", error);
      }
    });
  });

  // –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const closeModalBtn = document.querySelector(".close-modal");
  if (closeModalBtn) {
    closeModalBtn.addEventListener("click", hideLeaderboard);
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
  window.addEventListener("click", (event) => {
    const modal = document.getElementById("leaderboardModal");
    if (event.target === modal) {
      hideLeaderboard();
    }
  });
});

// –§—É–Ω–∫—Ü–∏—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã
function endGame() {
  isGameRunning = false;
  clearTimeout(targetTimer);

  const username = tg.initDataUnsafe?.user?.username || "–ê–Ω–æ–Ω–∏–º";

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—á–µ—Ç
  saveUserScore();

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã
  const gameOverScreen = document.getElementById("gameOverScreen");
  const finalScore = document.getElementById("finalScore");
  finalScore.textContent = coins;

  // –°–∫—Ä—ã–≤–∞–µ–º –∏–≥—Ä–æ–≤–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
  gameContainer.style.display = "none";
  gameOverScreen.style.display = "flex";
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∑–∂–µ"
document.getElementById("continueLater").addEventListener("click", endGame);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∑–∂–µ" –Ω–∞ —ç–∫—Ä–∞–Ω–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã
document
  .getElementById("continueLaterFromGameOver")
  .addEventListener("click", endGame);

// –û–±–Ω–æ–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é startGame
function startGame() {
  // –°–∫—Ä—ã–≤–∞–µ–º –∑–∞—Å—Ç–∞–≤–∫—É
  intro.style.display = "none";

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–≥—Ä–æ–≤–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
  document.getElementById("gameContainer").style.display = "block";

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –æ—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  loadUserScore();

  // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É
  isGameRunning = true;
  showTarget();

  // –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–≤—É–∫ –≤–∫–ª—é—á–µ–Ω
  if (isSoundOn) {
    storyAudio
      .play()
      .catch((e) => console.log("–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏:", e));
  }
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
document.addEventListener("DOMContentLoaded", () => {
  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Å—á–µ—Ç
  const savedScore = localStorage.getItem("gameScore");
  if (savedScore) {
    coins = parseInt(savedScore);
    updateScore();
  }

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const user = tg.initDataUnsafe?.user;
  if (user) {
    console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:", user.username);
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    localStorage.setItem(
      "telegram_user",
      JSON.stringify({
        id: user.id,
        username: user.username,
        first_name: user.first_name,
        last_name: user.last_name,
      })
    );
  }
});
